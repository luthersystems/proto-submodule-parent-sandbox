syntax = "proto3";

package srvpb.v1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "worldstatepb/v1/worldstate.proto";

option go_package = "ithub.com/luthersystems/proto-submodule-sandbox/outer/generated/srvpb/v1;v1";

// WorldstateService defines the public API for managing world state
service WorldstateService {
  rpc GetHealthCheck(GetHealthCheckRequest) returns (GetHealthCheckResponse) {
    option (google.api.http) = {get: "/v1/health_check"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {tags: "Worldstate"};
  }

  rpc CreateWorldState(CreateWorldStateRequest) returns (CreateWorldStateResponse) {
    option (google.api.http) = {
      post: "/v1/worldstate"
      body: "worldstate"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {tags: "Worldstate"};
  }

  rpc GetWorldState(GetWorldStateRequest) returns (GetWorldStateResponse) {
    option (google.api.http) = {get: "/v1/worldstate/{worldstate_id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {tags: "Worldstate"};
  }
}

// Request/Response messages:

message GetHealthCheckRequest {}

message GetHealthCheckResponse {
  string status = 1;
}

message CreateWorldStateRequest {
  worldstatepb.v1.WorldState worldstate = 1;
}

message CreateWorldStateResponse {
  string worldstate_id = 1;
}

message GetWorldStateRequest {
  string worldstate_id = 1;
}

message GetWorldStateResponse {
  worldstatepb.v1.WorldState worldstate = 1;
}
